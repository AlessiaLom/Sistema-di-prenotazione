[{"/Users/gianluca/my-app/src/index.js":"1","/Users/gianluca/my-app/src/components/App.js":"2","/Users/gianluca/my-app/src/components/SideBar.js":"3","/Users/gianluca/my-app/src/components/MenuItem.js":"4","/Users/gianluca/my-app/src/components/Footer.js":"5","/Users/gianluca/my-app/src/components/TimePicker.js":"6","/Users/gianluca/my-app/src/components/TextForm.js":"7","/Users/gianluca/my-app/src/components/ActivityRow.js":"8","/Users/gianluca/my-app/src/components/DayPicker.js":"9","/Users/gianluca/my-app/src/components/ActivityTable.js":"10","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/index.js":"11","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/App.js":"12","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/ActivityTable.js":"13","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/SideBar.js":"14","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/ActivityRow.js":"15","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/MenuItem.js":"16","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/Footer.js":"17","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/TextForm.js":"18","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/TimePicker.js":"19","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/DayPicker.js":"20","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/Customize.js":"21","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/Select.js":"22","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/ColorPicker.js":"23"},{"size":509,"mtime":1658848289642,"results":"24","hashOfConfig":"25"},{"size":2374,"mtime":1658849720890,"results":"26","hashOfConfig":"25"},{"size":2552,"mtime":1658846423228,"results":"27","hashOfConfig":"25"},{"size":1287,"mtime":1658846209697,"results":"28","hashOfConfig":"25"},{"size":571,"mtime":1658845980066,"results":"29","hashOfConfig":"25"},{"size":751,"mtime":1658846543435,"results":"30","hashOfConfig":"25"},{"size":710,"mtime":1658846473750,"results":"31","hashOfConfig":"25"},{"size":1988,"mtime":1658849231966,"results":"32","hashOfConfig":"25"},{"size":2338,"mtime":1658846164004,"results":"33","hashOfConfig":"25"},{"size":3239,"mtime":1658849325445,"results":"34","hashOfConfig":"25"},{"size":509,"mtime":1658848289642,"results":"35","hashOfConfig":"36"},{"size":2450,"mtime":1659101714462,"results":"37","hashOfConfig":"36"},{"size":10323,"mtime":1659101599816,"results":"38","hashOfConfig":"36"},{"size":2552,"mtime":1658846423228,"results":"39","hashOfConfig":"36"},{"size":10113,"mtime":1659093714951,"results":"40","hashOfConfig":"36"},{"size":1287,"mtime":1658846209697,"results":"41","hashOfConfig":"36"},{"size":571,"mtime":1658845980066,"results":"42","hashOfConfig":"36"},{"size":1156,"mtime":1659002038471,"results":"43","hashOfConfig":"36"},{"size":1062,"mtime":1659088687829,"results":"44","hashOfConfig":"36"},{"size":3465,"mtime":1659018309971,"results":"45","hashOfConfig":"36"},{"size":6525,"mtime":1659104477113,"results":"46","hashOfConfig":"36"},{"size":1335,"mtime":1659093240980,"results":"47","hashOfConfig":"36"},{"size":2785,"mtime":1659104256971,"results":"48","hashOfConfig":"36"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1pepqdu",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"iod45h",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/Users/gianluca/my-app/src/index.js",["130"],[],"/Users/gianluca/my-app/src/components/App.js",["131"],[],"/Users/gianluca/my-app/src/components/SideBar.js",["132","133","134","135","136","137","138"],[],"/Users/gianluca/my-app/src/components/MenuItem.js",["139","140","141"],[],"/Users/gianluca/my-app/src/components/Footer.js",["142","143"],[],"/Users/gianluca/my-app/src/components/TimePicker.js",["144","145","146"],[],"/Users/gianluca/my-app/src/components/TextForm.js",["147","148","149"],[],"/Users/gianluca/my-app/src/components/ActivityRow.js",["150","151","152"],[],"/Users/gianluca/my-app/src/components/DayPicker.js",["153","154"],[],"/Users/gianluca/my-app/src/components/ActivityTable.js",["155","156","157"],[],"/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/index.js",["158"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App';\n\n/**\n * ManagementApp renders the whole app \n */\nclass ManagementApp extends React.Component{\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <App />\n        )\n    }\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<ManagementApp />);\n",[],"/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/App.js",["159"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"./../styles/management.css\"\nimport \"./../styles/sideBar.css\"\nimport SideBar from './SideBar';\nimport ActivityTable from './ActivityTable';\nimport Customize from './Customize';\n\n/**\n * The App component will contain the two main sections: the sidebar and the main content\n * The App component will be the one responible also for the change of the content shown in the page.\n */\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeItemIndex: 0\n        }\n        this.changeContent = this.changeContent.bind(this)\n    }\n\n    /**\n     * saves the index of the currently active menuItem in order to change the content of the page and to highlight the right menuItem in the sideBar\n     * @param {int} i index of the selected menuItem (from top to bottom)\n     */\n    changeContent(i) {\n        console.log(\"\" + this.state.activeItemIndex)\n        this.setState({\n            activeItemIndex: i,\n            customize: <Customize/>\n        })\n        console.log(\"\" + this.state.activeItemIndex)\n    }\n\n    render() {\n        /**\n         * The contentShown will change based on the active menuItem option\n         * 0 - Personalizzazione (Customize component)\n         * 1 - Attività (ActivityTable component)\n         * 2 - Prenotazioni\n         * 3 - Servizi\n         * 4 - Account\n         */\n        let contentShown\n        switch (this.state.activeItemIndex) {\n            case 0:\n                contentShown = <><Customize/></>\n                break;\n            case 1:\n                contentShown = <><ActivityTable /></>\n                break\n            default:\n                contentShown = <p>Ciao mondo</p>\n                break;\n        }\n\n        /**\n         * Renders the SideBar and the main content container that will show the right page\n         */\n        return (\n            <div id=\"containerDiv\" className=\"row g-0 p-3\">\n                <div id=\"sidebarDiv\" className=\"col-3 shadow p-3 bg-body rounded\">\n                    <SideBar onClick={this.changeContent} activeItemIndex={this.state.activeItemIndex} />\n                </div>\n                <div id=\"mainContentContainer\" className=\"col shadow p-3 bg-body rounded\">\n                    {contentShown}\n                </div>\n            </div>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/ActivityTable.js",["160","161","162","163","164"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport \"./../styles/pages.css\"\nimport ActivityRow from './ActivityRow';\nimport TimePicker from './TimePicker';\nimport Select from './Select';\nimport { Textarea } from 'react-bootstrap-icons';\nimport TextForm from './TextForm';\n/**\n * Returns values of the passed dictionary as array\n * @param {*} dictionary \n * @returns \n */\nfunction getDictionaryValues(dictionary) {\n    var values = Object.keys(dictionary).map(function (key) {\n        return dictionary[key];\n    });\n    return values\n}\n\n/**\n * Contains activity rows and manages addition and deletion of rows of the table.\n */\nexport default class ActivityTable extends React.Component {\n    constructor(props) {\n        /**\n         *  props: no props\n         *      \n         */\n        super(props)\n        this.state = {\n            rowsDictionary: {}, // stores rows indexed by their keys as it is a dictionary (key = row's uniqueId, value = ActivityRow)\n            rowsErrorsDictionary: {}, // stores validation errors indexed by the key of the row that contains validation errors (key = row's uniqueId, value = boolean)\n            lastKey: 0, // keeps track of the last key/uniqueId used and gets incremented each time a new one is used\n            validationErrors: {\n                autoConfirmThresholdError: ''\n            },\n            fieldsValues: {\n                minimumNotice: '',\n                autoConfirmThreshold: ''\n            }\n        }\n        this.areThereValidationErrors = this.areThereValidationErrors.bind(this)\n        this.addActivityRow = this.addActivityRow.bind(this)\n        this.deleteActivityRow = this.deleteActivityRow.bind(this)\n        this.manageRowChanges = this.manageRowChanges.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.checkErrors = this.checkErrors.bind(this)\n        this.checkEmptyFields = this.checkEmptyFields.bind(this)\n    }\n\n    checkEmptyFields() {\n        let fieldsValues = this.state.fieldsValues\n        for (const field in fieldsValues) {\n            if (fieldsValues[field].trim() == '') {\n                return true\n            }\n        }\n        return false\n    }\n\n    checkErrors() {\n        let validationErrors = this.state.validationErrors\n        for (const error in validationErrors) {\n            if (validationErrors[error] != '')\n                return true\n        }\n        return false\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target\n        let newValidationErrors = this.state.validationErrors\n        let newFieldsValues = this.state.fieldsValues\n\n        // Check which input got changed and performs proper validation checks\n        switch (name) {\n            case \"selectMinimumNotice\": // There is no validation error on the minumum notice selection\n                console.log(\"changed \" + name + \" has value \" + value)\n                // Update field value in state dictionary\n                newFieldsValues.minimumNotice = value\n                break;\n            case \"autoConfirmThreshold\":\n                console.log(\"changed \" + name + \" has value \" + value)\n                if (Number.isInteger(Number(value)) && Number(value) > 0) {\n                    newValidationErrors.autoConfirmThresholdError = ''\n                } else {\n                    newValidationErrors.autoConfirmThresholdError = 'Inserisci un numero positivo'\n                }\n\n                // Update field value in state dictionary\n                newFieldsValues.autoConfirmThreshold = value\n                break\n            default:\n                break;\n        }\n\n        // Update the state\n        this.setState({\n            fieldsValues: newFieldsValues,\n            validationErrors: newValidationErrors\n        })\n    }\n\n    /**\n    * Checks if the rowsErrorsDictionary contains at least one true value\n    * @returns true if there is at least one error\n    */\n    areThereValidationErrors() {\n        let values = getDictionaryValues(this.state.rowsErrorsDictionary)\n        return values.includes(true) // if at least one dictionary element corresponds to true it means that at least one row contains errors\n    }\n\n    /**\n     * Updates the rowsErrorsDictionary when a row gets modified (one of its fields changes)\n     * @param {int} uniqueId uniqueId of the row that changed\n     * @param {boolean} hasErrors boolean true if the just modified row contains errors\n     */\n    manageRowChanges(uniqueId, hasErrors) {\n        let newRowsErrorsDictionary = this.state.rowsErrorsDictionary // Copy current errors dictionary\n        newRowsErrorsDictionary[uniqueId] = hasErrors\n\n        this.setState({\n            rowsErrorsDictionary: newRowsErrorsDictionary\n        })\n    }\n\n    /**\n     * Adds a row to the activity table\n     */\n    addActivityRow() {\n        // Sets the state with the new rows dictionary, the new errors dictionary and the new key to use for the next row\n\n        let newKey = this.state.lastKey + 1 // Compute new key\n\n        let newRowsDictionary = this.state.rowsDictionary // Copy current rows dictionary\n        let newrowsErrorsDictionary = this.state.rowsErrorsDictionary // Copy current errors dictionary\n\n        // Update the rows dictionary\n        newRowsDictionary[newKey] =\n            <ActivityRow\n                key={newKey}\n                uniqueId={newKey}\n                onClick={this.deleteActivityRow}\n                onChange={this.manageRowChanges} />\n\n        // Update the errors dictionary\n        newrowsErrorsDictionary[newKey] = true // The new row is set to contain errors when created because it is empty\n\n        // Update the state\n        this.setState({\n            rowsDictionary: newRowsDictionary,\n            rowsErrorsDictionary: newrowsErrorsDictionary,\n            lastKey: newKey\n        });\n    }\n\n    /**\n     * Deletes the ActivityRow with uniqueId from the ActivityTable\n     * @param {int} uniqueId uniqueId of the row that has to be deleted. Is passed by the ActivityRow when the delete button is pressed\n     */\n    deleteActivityRow(uniqueId) {\n        let newRowsDictionary = this.state.rowsDictionary // Copy current rows dictionary\n        let newrowsErrorsDictionary = this.state.rowsErrorsDictionary // Copy current errors dictionary\n        delete newRowsDictionary[uniqueId] // Delete entry from rows dictionary\n        delete newrowsErrorsDictionary[uniqueId] // Delete entry from errors dictionary\n        // Update the state\n        this.setState({\n            rowsDictionary: newRowsDictionary,\n            rowsErrorsDictionary: newrowsErrorsDictionary\n        })\n    }\n\n    render() {\n        let rows = getDictionaryValues(this.state.rowsDictionary)\n        let rowsWithErrors = this.areThereValidationErrors() // true or false\n        // Check if are there errors in the fields not included in the rows (eg. autoConfirmThreshold)\n        let hasErrors = this.checkErrors()\n        // Check if are there empty fields \n        let hasEmptyFields = this.checkEmptyFields()\n        return (\n            <><div>\n                <div>\n                    <h4>Informazioni generali</h4>\n                    <hr></hr>\n                    <h6>Preavviso minimo</h6>\n                    <p>Il preavviso minimo è espresso in ore e minuti e sarà applicato a tutte le attività elencate nella tabella attività</p>\n                    <Select\n                        onChange={this.handleChange}\n                        name=\"selectMinimumNotice\"\n                        options={new Array(\"Nessun preavviso\", \"1:00h\", \"1:30h\", \"2:00h\", \"2:30h\", \"3:00h\", \"3:30h\")}\n                    />\n                    <h6>Soglia per conferma automatica</h6>\n                    <p>La soglia per la conferma automatica rappresenta il numero\n                        di coperti entro il quale la conferma della prenotazione\n                        è inviata automaticamente al cliente ed oltre il quale la\n                        conferma sarà manuale da parte del ristoratore</p>\n                    <TextForm\n                        onChange={this.handleChange}\n                        validationError={this.state.validationErrors.autoConfirmThresholdError}\n                        name=\"autoConfirmThreshold\"\n                        placeholder=\"es. 5\"\n                    />\n                </div>\n                <hr></hr>\n                <div>\n                    <h4>Lista attività</h4>\n                    <hr></hr>\n                </div>\n                <table id=\"activitiesTable\">\n                    <thead>\n                        <tr>\n                            <th className=\"headerCol\" scope=\"col\">Nome attività</th>\n                            <th className=\"headerCol\" scope=\"col\">Fascia oraria</th>\n                            <th className=\"headerCol\" scope=\"col\">Numero coperti</th>\n                            <th className=\"headerCol\" scope=\"col\">Giorni</th>\n                            <th className=\"headerCol\" scope=\"col\">Elimina</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows} {/* Renders all the ActivityRow components contained in the dictionary*/}\n                    </tbody>\n                </table>\n            </div>\n                <div id=\"buttonsDiv\">\n                    <button\n                        id=\"saveChangesButton\"\n                        type=\"button\"\n                        className={\"btn btn-primary\" + (rowsWithErrors || hasErrors || hasEmptyFields ? \" disabled\" : \"\")}>\n                        {/*Disable the button if there are validation errors*/}\n                        Salva impostazioni\n                    </button>\n                    <button\n                        onClick={this.addActivityRow}\n                        id=\"addActivityButton\"\n                        type=\"button\"\n                        className={\"btn btn-outline-primary\" + ((rowsWithErrors) ? \" disabled\" : \"\")}>\n                        {/** The \"aggiungi attività\" button is enabled only if every row is correct or if there are no rows (so that it is possible to add the first row) */}\n                        <i class=\"bi bi-plus\"></i>\n                        Aggiungi attività\n                    </button>\n                </div></>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/SideBar.js",["165","166","167","168","169","170","171"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport MenuItem from './MenuItem';\nimport Footer from './Footer';\nimport \"./../styles/sideBar.css\"\n\n/**\n * The SideBar represents the side navigation bar menu \n */\nexport default class SideBar extends React.Component {\n    constructor(props) {\n        /**\n         *  props:\n         *      - activeItemIndex: passed by the App to make the SideBar change the class of the MenuItem so that bootstrap can style the active one differently from th other ones\n         *      - onClick: the App's changeContent(i) function used to change content dependently on the index of the selected MenuItem\n         */\n        super(props)\n    }\n\n    render() {\n        return (\n            <><ul className=\"nav nav-pills flex-column mb-auto\">\n                <MenuItem\n                    itemName=\"customization\"\n                    className={this.props.activeItemIndex == 0 ? \"nav-link active\" : \"nav-link link-dark\"}\n                    itemIcon=\"bi bi-brush\"\n                    itemDisplayName=\"Personalizza\"\n                    onClick={() => this.props.onClick(0)} />\n                <MenuItem\n                    itemName=\"activity\"\n                    className={this.props.activeItemIndex == 1 ? \"nav-link active\" : \"nav-link link-dark\"}\n                    itemIcon=\"bi bi-calendar-range\"\n                    itemDisplayName=\"Attività\"\n                    onClick={() => this.props.onClick(1)} />\n                <MenuItem\n                    itemName=\"reservations\"\n                    className={this.props.activeItemIndex == 2 ? \"nav-link active\" : \"nav-link link-dark\"}\n                    itemIcon=\"bi bi-person-check\"\n                    itemDisplayName=\"Prenotazioni\"\n                    onClick={() => this.props.onClick(2)} />\n                <MenuItem\n                    itemName=\"services\"\n                    className={this.props.activeItemIndex == 3 ? \"nav-link active\" : \"nav-link link-dark\"}\n                    itemIcon=\"bi bi-share\"\n                    itemDisplayName=\"Servizi\"\n                    onClick={() => this.props.onClick(3)} />\n                <MenuItem\n                    itemName=\"account\"\n                    className={this.props.activeItemIndex == 4 ? \"nav-link active\" : \"nav-link link-dark\"}\n                    itemIcon=\"bi bi-gear-wide-connected\"\n                    itemDisplayName=\"Account\"\n                    onClick={() => this.props.onClick(4)} />\n            </ul><Footer /></>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/ActivityRow.js",["172","173","174","175","176","177"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport \"./../styles/pages.css\"\nimport TimePicker from './TimePicker';\nimport TextForm from './TextForm';\nimport DayPicker from './DayPicker';\n\nfunction checkChronologicalOrder(startingTime, endingTime) {\n    if (startingTime.hours > endingTime.hours) {\n        return true\n    } else if (startingTime.hours == endingTime.hours) {\n        if (startingTime.minutes > endingTime.minutes) {\n            return true\n        }\n    } else {\n        return false\n    }\n}\n\n/*\n * This component represents an activity row inside the ActivityTable. \n * Everytime the \"Aggiungi attività\" button is pressed a new ActivityRow is created and added to the table.\n * Everytime the red button is pressed, the row gets deleted and removed from the table.\n */\nexport default class ActivityRow extends React.Component {\n    constructor(props) {\n        /*\n            props:\n                - key: unique key used by react in arrays\n                - uniqueId: same as the key but used by us to delete the right row when the button is pressed\n                - onClick: function that is fired when the delete button is presses. The function belongs to the ActivityTable parent.\n                - onChange: function owned by ActivityTable that is fired when some input in the table change, it is used to enable/disable the button if one or more rows contain error\n        */\n        super(props)\n\n        this.state = {\n            fieldsValues: {\n                activityName: '',\n                startingTime: '',\n                endingTime: '',\n                availableSpots: '',\n                days: ''\n            },\n            validationErrors: {\n                activityNameError: '',\n                timesError: '',\n                availableSpotsError: '',\n                daysError: ''\n            }\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.checkErrors = this.checkErrors.bind(this)\n        this.checkEmptyFields = this.checkEmptyFields.bind(this)\n    }\n\n    /**\n     * Checks if the row contains errors by checking each error type in the state of the row\n     * @returns true if the rows contains errors\n     */\n    checkErrors() {\n        let validationErrors = this.state.validationErrors\n        for (const error in validationErrors) {\n            if (validationErrors[error] != '')\n                return true\n        }\n        return false\n    }\n\n    checkEmptyFields() {\n        let fieldsValues = this.state.fieldsValues\n        for (const field in fieldsValues) {\n            if (fieldsValues[field].toString().trim() == '') {\n                return true\n            }\n        }\n        return false\n    }\n\n    /**\n     * Handles the change of the input the row contains\n     * Checks for validation errors (differentiates for each input)\n     * Updates the ActivityTable with its current state regarding errors in the row\n     */\n    handleChange(event) {\n        const { name, value } = event.target\n        let newValidationErrors = this.state.validationErrors\n        let newFieldsValues = this.state.fieldsValues\n        let startingTime\n        let endingTime\n\n        // Check which input got changed and performs proper validation checks\n        switch (name) {\n            case \"activityName\" + this.props.uniqueId: // Activity name accepts whatever name except empy name\n                console.log(\"changed \" + name + \" has value \" + value)\n                if (value && value.trim() != '') { // If activity name has no value, the row contains errors regarding activity name\n                    newValidationErrors.activityNameError = ''\n                } else {\n                    newValidationErrors.activityNameError = 'Campo obbligatorio'\n                }\n\n                // Update field value in state dictionary\n                newFieldsValues.activityName = value\n                break;\n            case 'availableSpots' + this.props.uniqueId:\n                console.log(\"changed \" + name + \" has value \" + value)\n                if (Number.isInteger(Number(value)) && Number(value) > 0) {\n                    newValidationErrors.availableSpotsError = ''\n                } else {\n                    newValidationErrors.availableSpotsError = 'Inserisci un numero positivo'\n                }\n\n                // Update field value in state dictionary\n                newFieldsValues.availableSpots = value\n                break\n            case 'startingTime' + this.props.uniqueId:\n                // Parse starting time\n                startingTime = {\n                    hours: parseInt(value.split(\":\")[0]),\n                    minutes: parseInt(value.split(\":\")[1])\n                }\n\n                console.log(\"changed \" + name + \" has value \" + startingTime.hours + \":\" + startingTime.minutes)\n\n                // Update field value in state dictionary\n                newFieldsValues.startingTime = startingTime\n\n                // get endingTime value to perform checkings\n                endingTime = newFieldsValues.endingTime\n                if (endingTime) {\n                    if (checkChronologicalOrder(startingTime, endingTime)) {\n                        newValidationErrors.timesError = \"Rispettare ordine cronologico\"\n                    } else {\n                        newValidationErrors.timesError = ''\n                    }\n                }\n                break;\n            case 'endingTime' + this.props.uniqueId:\n                endingTime = {\n                    hours: parseInt(value.split(\":\")[0]),\n                    minutes: parseInt(value.split(\":\")[1])\n                }\n\n                console.log(\"changed \" + name + \" has value \" + endingTime.hours + \":\" + endingTime.minutes)\n\n                // Update field value in state dictionary\n                newFieldsValues.endingTime = endingTime\n\n                // get endingTime value to perform checkings\n                startingTime = newFieldsValues.startingTime\n                if (startingTime) {\n                    if (checkChronologicalOrder(startingTime, endingTime)) {\n                        newValidationErrors.timesError = \"Rispettare ordine cronologico\"\n                    } else {\n                        newValidationErrors.timesError = ''\n                    }\n                }\n                break;\n            case 'dayPicker' + this.props.uniqueId:\n                let days = newFieldsValues.days\n                if (days.includes(value)) {\n                    days = days.replace(value, '')\n                } else {\n                    days += value\n                }\n                if (days == '') {\n                    newValidationErrors.daysError = 'Seleziona almeno un giorno'\n                } else {\n                    newValidationErrors.daysError = ''\n                }\n                console.log(\"changed \" + name + \" days picked: \" + days)\n                newFieldsValues.days = days\n                break;\n            default:\n                break;\n        }\n\n        // Update the state\n        this.setState({\n            fieldsValues: newFieldsValues,\n            validationErrors: newValidationErrors\n        })\n\n        // Check if the row contains errors after the change\n        let hasErrors = this.checkErrors()\n        let hasEmptyFields = this.checkEmptyFields()\n\n        // Call the ActivityTable.manageRowChanges(uniqueId, hasErrors) to update the parent regarding current row's validation errors\n        // Buttons in ActivityTable will be disabled if the row contains errors or if some fields are empty (or if both conditions happen)\n        this.props.onChange(this.props.uniqueId, hasErrors || hasEmptyFields)\n    }\n\n    render() {\n        return (\n            <tr>\n                <td scope=\"row\" style={{ width: \"5%\" }}>\n                    <TextForm\n                        name={\"activityName\" + this.props.uniqueId}\n                        placeholder=\"es. Cena\"\n                        onChange={this.handleChange}\n                        validationError={this.state.validationErrors.activityNameError}\n                    />\n                </td>\n                <td style={{ width: \"25%\" }}>\n                    <div style={{ display: \"inline\" }}>\n                        <span className=\"validationError\">{this.state.validationErrors.timesError}</span>\n                        <p style={{ float: \"left\" }}> Dalle: </p>\n                        <TimePicker\n                            onChange={this.handleChange}\n                            name={\"startingTime\" + this.props.uniqueId}\n                            min=\"00:00\"\n                            max=\"23:59\"\n                        />\n                        <p style={{ float: \"left\" }}> Alle: </p>\n                        <TimePicker\n                            onChange={this.handleChange}\n                            name={\"endingTime\" + this.props.uniqueId}\n                            min=\"00:00\"\n                            max=\"23:59\" />\n                    </div>\n                </td>\n                <td style={{ width: \"10%\" }}>\n                    <TextForm\n                        name={\"availableSpots\" + this.props.uniqueId}\n                        placeholder=\"es. 5\"\n                        onChange={this.handleChange}\n                        validationError={this.state.validationErrors.availableSpotsError} />\n                </td>\n                <td style={{ width: \"10%\" }}>\n                    <DayPicker\n                        validationError={this.state.validationErrors.daysError}\n                        name={\"dayPicker\" + this.props.uniqueId}\n                        onChange={this.handleChange} />\n                </td>\n                <td style={{ width: \"10%\" }}>\n                    <button\n                        onClick={() => this.props.onClick(this.props.uniqueId)}\n                        type=\"button\"\n                        className=\"deleteActivityButton btn btn-outline-danger\">\n                        <i className=\"bi bi-trash\"></i>\n                    </button>\n                </td>\n            </tr>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/MenuItem.js",["178","179","180"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"./../styles/sideBar.css\"\n\n/**\n * The MenuItem represents one of the options of the menu\n */\nexport default class MenuItem extends React.Component {\n    constructor(props) {\n        /**\n         *  props:\n         *      - itemName: name of the <a> element\n         *      - className: name of the class of the <a> element\n         *      - onClick: function triggered onClick, it will trigger the App function used to highlight the active menu link and to change content.\n         *                  the function is passed to the MenuItem component through the SideBar component\n         *      - itemIcon: name of the bootstrap class of the icon\n         *      - itemDisplayName: what is displayed as the name of the menu option (es. Personalizzazione)\n         */\n        super(props)\n    }\n\n    render() {\n        return (\n            <li className=\"nav-item\">\n                <a href=\"#\" name={this.props.itemName} className={this.props.className} aria-current=\"page\" onClick={this.props.onClick}>\n                    <i className={this.props.itemIcon}></i>\n                    {this.props.itemDisplayName}\n                </a>\n            </li>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/Footer.js",["181","182"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"./../styles/sideBar.css\"\n\n/**\n * The Footer contains the Logout button on the sidebar\n */\nexport default class Footer extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"mx-auto align-items-center justify-content-center\" id=\"footerDiv\">\n                <button type=\"button\" className=\"btn btn-outline-secondary\">Logout</button>\n            </div>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/TextForm.js",["183","184","185"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"./../styles/pages.css\"\nimport $ from 'jquery';\n\n/**\n * Represents an input text area\n */\nexport default class TextForm extends React.Component {\n    constructor(props) {\n        /**\n         *  props:\n         *      - id: id of the html input element\n         *      - placeholder: the placeholder of the input text area\n         *      - validationError: contains the error message for wrong input, used to color the border of red\n         */ \n        super(props)\n    }\n\n    render() {\n        let className = \"form-control\" + (this.props.validationError ? \" border-danger\" : \"\")\n        return (\n            <>\n                <span className=\"validationError\">{this.props.validationError}</span>\n                <input\n                    name={this.props.name}\n                    type=\"text\"\n                    className={className}\n                    placeholder={this.props.placeholder}\n                    onChange={this.props.onChange}\n                    required>\n                </input>\n            </>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/TimePicker.js",["186","187","188"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"./../styles/pages.css\"\nimport $ from 'jquery';\n\n\n/**\n * Represents an input type time element\n */\nexport default class TimePicker extends React.Component {\n    constructor(props) {\n        /**\n         *  props:\n         *      - min: the minimum time that can be picked\n         *      - max: the maximum time that can be picked\n        */\n        super(props)\n    }\n\n    render() {\n        return (\n            <div style={{ width: \"30%\", float: \"left\" }} className=\"input-group timepicker\">\n                <input\n                    onChange={this.props.onChange}\n                    id={this.props.id}\n                    className=\"form-control\"\n                    type=\"time\"\n                    name={this.props.name}\n                    min={this.props.min}\n                    max={this.props.max}\n                    step={this.props.step}\n                    required>\n                </input>\n            </div>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/DayPicker.js",["189","190"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"./../styles/pages.css\"\n\n/**\n * The DayPicker component is used to select the days a certain activiy takes places for a restaurant\n */\nexport default class DayPicker extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div>\n                <span className=\"validationError\">{this.props.validationError}</span>\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        onChange={this.props.onChange}\n                        name={this.props.name}\n                        value=\"L\"></input>\n                    <label className=\"form-check-label\" >L</label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        onChange={this.props.onChange}\n                        name={this.props.name}\n                        value=\"Ma\"></input>\n                    <label className=\"form-check-label\" >Ma</label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        onChange={this.props.onChange}\n                        name={this.props.name}\n                        value=\"Me\"></input>\n                    <label className=\"form-check-label\" >Me</label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        onChange={this.props.onChange}\n                        name={this.props.name}\n                        value=\"G\"></input>\n                    <label className=\"form-check-label\" >G</label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        onChange={this.props.onChange}\n                        name={this.props.name}\n                        value=\"V\"></input>\n                    <label className=\"form-check-label\" >V</label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        onChange={this.props.onChange}\n                        name={this.props.name}\n                        value=\"S\"></input>\n                    <label className=\"form-check-label\" >S</label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                    <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        onChange={this.props.onChange}\n                        name={this.props.name}\n                        value=\"D\"></input>\n                    <label className=\"form-check-label\" >D</label>\n                </div>\n            </div>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/Customize.js",["191","192","193","194"],[],"/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/Select.js",["195","196","197","198"],[],"import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"./../styles/pages.css\"\nimport $ from 'jquery';\n\n/**\n * Represents an input text area\n */\nexport default class Select extends React.Component {\n    constructor(props) {\n        /**\n         *  props:\n         *      - id: id of the html input element\n         *      - placeholder: the placeholder of the input text area\n         *      - validationError: contains the error message for wrong input, used to color the border of red\n         */\n        super(props)\n    }\n\n    render() {\n        let className = \"form-control\" + (this.props.validationError ? \" border-danger\" : \"\")\n        let options = this.props.options.map(option => (<option key={option} value={option}>{option}</option>))\n        console.log(options)\n        return (\n            <>\n                {/*<span className=\"validationError\">{this.props.validationError}</span>*/}\n                <select\n                    name={this.props.name}\n                    className=\"form-select\"\n                    aria-label=\"Default select example\"\n                    onChange={this.props.onChange}\n                >\n                    {\n                        options\n                    }\n                </select>\n            </>\n        )\n    }\n}","/Users/gianluca/Library/Mobile Documents/com~apple~CloudDocs/Università/Unibo/Courses/Tirocinio.nosync/Sistema-di-prenotazione.nosync/managementPage/src/components/ColorPicker.js",["199"],[],{"ruleId":"200","severity":1,"message":"201","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":12,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":12,"column":5,"nodeType":"202","messageId":"203","endLine":19,"endColumn":6},{"ruleId":"208","severity":1,"message":"209","line":26,"column":59,"nodeType":"210","messageId":"211","endLine":26,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":32,"column":59,"nodeType":"210","messageId":"211","endLine":32,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":38,"column":59,"nodeType":"210","messageId":"211","endLine":38,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":44,"column":59,"nodeType":"210","messageId":"211","endLine":44,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":50,"column":59,"nodeType":"210","messageId":"211","endLine":50,"endColumn":61},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":21,"endColumn":6},{"ruleId":"212","severity":1,"message":"213","line":26,"column":17,"nodeType":"214","endLine":26,"endColumn":138},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":12,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":9},{"ruleId":"200","severity":1,"message":"201","line":12,"column":5,"nodeType":"202","messageId":"203","endLine":19,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":9},{"ruleId":"200","severity":1,"message":"201","line":11,"column":5,"nodeType":"202","messageId":"203","endLine":17,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":9},{"ruleId":"200","severity":1,"message":"201","line":17,"column":5,"nodeType":"202","messageId":"203","endLine":26,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":12,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":9},{"ruleId":"208","severity":1,"message":"209","line":47,"column":36,"nodeType":"210","messageId":"211","endLine":47,"endColumn":38},{"ruleId":"200","severity":1,"message":"201","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":12,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"216","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":18},{"ruleId":"204","severity":1,"message":"217","line":7,"column":10,"nodeType":"206","messageId":"207","endLine":7,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":55,"column":44,"nodeType":"210","messageId":"211","endLine":55,"endColumn":46},{"ruleId":"208","severity":1,"message":"218","line":65,"column":41,"nodeType":"210","messageId":"211","endLine":65,"endColumn":43},{"ruleId":"219","severity":1,"message":"220","line":191,"column":34,"nodeType":"221","messageId":"222","endLine":191,"endColumn":117},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":12,"column":5,"nodeType":"202","messageId":"203","endLine":19,"endColumn":6},{"ruleId":"208","severity":1,"message":"209","line":26,"column":59,"nodeType":"210","messageId":"211","endLine":26,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":32,"column":59,"nodeType":"210","messageId":"211","endLine":32,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":38,"column":59,"nodeType":"210","messageId":"211","endLine":38,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":44,"column":59,"nodeType":"210","messageId":"211","endLine":44,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":50,"column":59,"nodeType":"210","messageId":"211","endLine":50,"endColumn":61},{"ruleId":"208","severity":1,"message":"209","line":11,"column":35,"nodeType":"210","messageId":"211","endLine":11,"endColumn":37},{"ruleId":"208","severity":1,"message":"218","line":63,"column":41,"nodeType":"210","messageId":"211","endLine":63,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":72,"column":55,"nodeType":"210","messageId":"211","endLine":72,"endColumn":57},{"ruleId":"208","severity":1,"message":"218","line":95,"column":43,"nodeType":"210","messageId":"211","endLine":95,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":165,"column":26,"nodeType":"210","messageId":"211","endLine":165,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":195,"column":21,"nodeType":"225","endLine":195,"endColumn":32},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":21,"endColumn":6},{"ruleId":"212","severity":1,"message":"213","line":26,"column":17,"nodeType":"214","endLine":26,"endColumn":138},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":12,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":9},{"ruleId":"200","severity":1,"message":"201","line":11,"column":5,"nodeType":"202","messageId":"203","endLine":19,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":9},{"ruleId":"200","severity":1,"message":"201","line":12,"column":5,"nodeType":"202","messageId":"203","endLine":19,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":10,"column":5,"nodeType":"202","messageId":"203","endLine":12,"endColumn":6},{"ruleId":"208","severity":1,"message":"209","line":34,"column":44,"nodeType":"210","messageId":"211","endLine":34,"endColumn":46},{"ruleId":"208","severity":1,"message":"218","line":44,"column":41,"nodeType":"210","messageId":"211","endLine":44,"endColumn":43},{"ruleId":"208","severity":1,"message":"218","line":60,"column":43,"nodeType":"210","messageId":"211","endLine":60,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":149,"column":63,"nodeType":"228","messageId":"211","endLine":149,"endColumn":69},{"ruleId":"204","severity":1,"message":"205","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":9},{"ruleId":"200","severity":1,"message":"201","line":11,"column":5,"nodeType":"202","messageId":"203","endLine":19,"endColumn":6},{"ruleId":"204","severity":1,"message":"229","line":22,"column":13,"nodeType":"206","messageId":"207","endLine":22,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":1,"column":1,"nodeType":"232","messageId":"233","endLine":1,"endColumn":13,"fix":"234"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'$' is defined but never used.","'TimePicker' is defined but never used.","'Textarea' is defined but never used.","Expected '!==' and instead saw '!='.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'className' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"235","text":"236"},[0,12],""]